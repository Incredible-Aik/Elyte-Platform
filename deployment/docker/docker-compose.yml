version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: elyte-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: elyte-platform
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - elyte-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: elyte-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - elyte-network

  # API Service
  api:
    build:
      context: .
      dockerfile: deployment/docker/api.Dockerfile
    container_name: elyte-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/elyte-platform?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      CLIENT_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - elyte-network

  # Web Application
  web:
    build:
      context: .
      dockerfile: deployment/docker/web.Dockerfile
    container_name: elyte-web
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - elyte-network

  # USSD Service
  ussd:
    build:
      context: ./ussd-service
      dockerfile: ../deployment/docker/ussd.Dockerfile
    container_name: elyte-ussd
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      API_URL: http://api:5000/api/v1
      REDIS_URL: redis://redis:6379
    ports:
      - "3001:3001"
    depends_on:
      - api
      - redis
    networks:
      - elyte-network

  # Nginx Load Balancer/Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: elyte-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
      - ussd
    networks:
      - elyte-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  elyte-network:
    driver: bridge